enum StakeType {
  NU,
  KEEP,
  T
}

type Account @entity {
  # Id is the ethereum address of the account.
  id: ID!
  stakes: [StakeData!] @derivedFrom(field: "owner")
  delegatee: TokenholderDelegation
  # TODO add more fields example `tokenBalances`.
}

type StakeData @entity {
  id: ID! # staking provider address
  owner: Account! # address
  stakeType: StakeType!
  beneficiary: Bytes! # address
  authorizer: Bytes! # address
  tStake: BigInt!
  keepInTStake: BigInt!
  nuInTStake: BigInt!
  totalStaked: BigInt!
  delegatee: StakeDelegation
}

type EpochStake @entity {
  id: ID! # staking prov add + epoch counter
  stakeData: StakeData!
  amount: BigInt!
  participation: BigDecimal
}

type Epoch @entity {
  id: ID! # epoch counter
  startTime: BigInt!
  duration: BigInt
  totalStaked: BigInt!
  stakes: [EpochStake!]!
}

type MinStakeAmount @entity {
  id: ID!
  amount: BigInt!
  updatedAt: BigInt!
  blockNumber: BigInt!
}

type EpochCounter @entity {
  id: ID!
  count: Int!
}

interface Delegation {
  # The delegatee address
  id: ID!
  totalWeight: BigInt!
}

type StakeDelegation implements Delegation @entity {
  # The delegatee address
  id: ID!
  totalWeight: BigInt!
  stakeDelegators: [StakeData!] @derivedFrom(field: "delegatee")
}

type TokenholderDelegation implements Delegation @entity {
  # The delegatee address
  id: ID!
  # The voting weight from the snapshot mechanism in the token and staking
  # contracts. For Tokenholder DAO, there are currently two voting power
  # sources:
  # - Liquid T, tracked by the T token contract
  # - Stakes in the T network, tracked  by the T staking contract. Note that
  #   this also tracks legacy stakes (NU/KEEP); legacy stakes count for
  #   tokenholders' voting power, but not for the total voting power of the
  #   Tokenholder DAO."
  totalWeight: BigInt!
  liquidWeight: BigInt!
  delegators: [Account!] @derivedFrom(field: "delegatee")
}

type ConfirmedOperator @entity {
  id: ID!
  stakingProvider: Bytes! # address
  operator: Bytes! # address
}
