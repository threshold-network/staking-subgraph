enum StakeType {
  NU,
  KEEP,
  T
}

type StakeData @entity {
  id: ID! # staking provider address
  stakeType: StakeType!
  owner: Bytes! # address
  stakingProvider: Bytes! # address
  beneficiary: Bytes! # address
  authorizer: Bytes! # address
}

type EpochStake @entity {
  id: ID! # staking prov add + epoch counter
  stakeData: StakeData!
  amount: BigInt!
  participation: BigDecimal
}

type Epoch @entity {
  id: ID! # epoch counter
  startTime: BigInt!
  duration: BigInt
  totalStaked: BigInt!
  stakes: [EpochStake!]!
}

type EpochCounter @entity {
  id: ID!
  count: Int!
}

type Delegation @entity {
  id: ID!
  delegator: Bytes! # address
  delegate: Bytes! # address
}

type ConfirmedOperator @entity {
  id: ID!
  stakingProvider: Bytes! # address
  operator: Bytes! # address
}
